# Note: inspired by gtk-rs pipeline
on:
  workflow_run:
    workflows:
      - Create Linux x86_64 release
    types:
      - completed

name: Create Windows 64-bit release

jobs:
  gvsbuild:
    name: Build GTK libs
    runs-on: windows-latest
    env:
      gvsbuildref: 69cdac34c36d74eeae37006bb0fcedc64ee518dd
      gvsbuildupdate: 1

    outputs:
      cachekey: ${{ steps.output.outputs.cachekey }}

    steps:
      - name: (GTK binaries) create dir
        run: mkdir C:\gtk-build\gtk\x64\release

      - name: (GTK binaries) get from cache
        uses: actions/cache@v2
        id: cache
        with:
          path: C:\gtk-build\gtk\x64\release\**
          key: gvsbuild-${{ env.gvsbuildupdate }}-${{ env.gvsbuildref }}

      - name: (GTK binaries) checkout gvsbuild
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: wingtk/gvsbuild
          ref: ${{ env.gvsbuildref }}
          path: gvsbuild

      - name: (GTK binaries) move git binary
        if: steps.cache.outputs.cache-hit != 'true'
        run: move "C:\Program Files\Git\usr\bin" "C:\Program Files\Git\usr\notbin"
        shell: cmd

      - name: (GTK binaries) run gvsbuild
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: gvsbuild
        run: python .\build.py build -p=x64 --vs-ver=16 --msys-dir=C:\msys64 gtk3

      - name: (GTK binaries) restore git binary
        if: steps.cache.outputs.cache-hit != 'true'
        run: move "C:\Program Files\Git\usr\notbin" "C:\Program Files\Git\usr\bin"
        shell: cmd

      - name: (GTK binaries) output cache key
        id: output
        run: echo "::set-output name=cachekey::gvsbuild-${{ env.gvsbuildupdate }}-${{ env.gvsbuildref }}"

  build:
    name: Build Dragit on Windows
    runs-on: windows-latest
    needs: gvsbuild
    steps:
      - name: Create GTK binaries dir
        run: mkdir C:\gtk-build\gtk\x64\release

      - name: Get GTK binaries from cache
        uses: actions/cache@v2
        id: cache
        with:
          path: C:\gtk-build\gtk\x64\release\**
          key: ${{needs.gvsbuild.outputs.cachekey}}

      - name: Set up env
        run: |
          echo "PKG_CONFIG=C:\gtk-build\gtk\x64\release\bin\pkgconf.exe" >> $GITHUB_ENV
          echo "C:\gtk-build\gtk\x64\release\bin" >> $GITHUB_PATH
        shell: bash

      - name: Create target path
        run: mkdir C:\build

      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true

      - name: Build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target-dir C:\build

      # - name: Clean release
      #   run: |
      #     Remove-Item -Recurse -Confirm:$false C:\build\release\deps
      #     Remove-Item -Recurse -Confirm:$false C:\build\release\build
      #     Remove-Item -Recurse -Confirm:$false C:\build\release\incremental
      #     Remove-Item -Recurse -Confirm:$false C:\build\release\examples
      #     Remove-Item -Recurse -Confirm:$false C:\build\release\.fingerprint
      #     Remove-Item -Confirm:$false C:\build\release\.cargo-lock
      #     Remove-Item -Confirm:$false C:\build\release\dragit.pdb

      - name: Show gvsbuild libs
        run: ls -Recurse C:\gtk-build\gtk\x64\release\share\

      # - name: Run copy script
      #   if: github.event.action == 'script'
      #   run: pwsh -command ".\$GITHUB_WORKSPACE\scripts\package.ps1"

      # - name: Copy libs
        # run: cp C:\gtk-build\gtk\x64\release\bin\* C:\build\release\

      # vcpkg works, but gvsbuild is preferred
      # - name: Install gtk from vcpkg
      #   run: |
      #     C:\vcpkg\vcpkg.exe install gtk:x64-windows
      #     ls -Recurse C:\vcpkg\


      - uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-adwaita-icon-theme
            mingw-w64-x86_64-hicolor-icon-theme

      - name: Debug icons
        run: ls -Recurse D:\a\_temp\msys\msys64\mingw64\share\icons

      - name: Copy dependencies
        run: |
          mkdir $env:PACKAGE_DIR
          mkdir $env:PACKAGE_DIR\bin\
          mkdir $env:PACKAGE_DIR\lib\
          mkdir $env:PACKAGE_DIR\share\

          cp C:\build\release\dragit.exe $env:PACKAGE_DIR\bin\

          foreach($line in Get-Content .\scripts\windows_deps.txt) {
              cp C:\gtk-build\gtk\x64\release\bin\$line $env:PACKAGE_DIR\bin\
          }

          cp -r C:\gtk-build\gtk\x64\release\share\glib-2.0 $env:PACKAGE_DIR\share\
          cp -r D:\a\_temp\msys\msys64\mingw64\share\icons $env:PACKAGE_DIR\share\

          # https://github.com/gtk-rs/gtk/issues/422
          cp -r C:\gtk-build\gtk\x64\release\lib\gdk-pixbuf-2.0 $env:PACKAGE_DIR\lib\
        env:
          PACKAGE_DIR: C:\build\dragit

      - name: Build zip package
        run: |
          cd C:\build\
          tar.exe -a -c -f C:\build\dragit_package.zip dragit

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.workflow_run.build.outputs.upload_url }}
          asset_path: C:\build\dragit_package.zip
          asset_name: dragit_package.zip
          asset_content_type: application/zip